name: Deploy site

on:
  push:
    branches:
      - master
      - main
    paths:
      - "assets/**"
      - "_sass/**"
      - "_scripts/**"
      - "**.bib"
      - "**.html"
      - "**.js"
      - "**.liquid"
      - "**/*.md"
      - "**.yml"
      - "Gemfile"
      - "Gemfile.lock"
      - "!.github/workflows/axe.yml"
      - "!.github/workflows/broken-links.yml"
      - "!.github/workflows/deploy-docker-tag.yml"
      - "!.github/workflows/deploy-image.yml"
      - "!.github/workflows/docker-slim.yml"
      - "!.github/workflows/lighthouse-badger.yml"
      - "!.github/workflows/prettier.yml"
      - "!lighthouse_results/**"
      - "!CONTRIBUTING.md"
      - "!CUSTOMIZE.md"
      - "!FAQ.md"
      - "!INSTALL.md"
      - "!README.md"
  pull_request:
    branches:
      - master
      - main
    paths:
      - "assets/**"
      - "_sass/**"
      - "_scripts/**"
      - "**.bib"
      - "**.html"
      - "**.js"
      - "**.liquid"
      - "**/*.md"
      - "**.yml"
      - "Gemfile"
      - "Gemfile.lock"
      - "!.github/workflows/axe.yml"
      - "!.github/workflows/broken-links.yml"
      - "!.github/workflows/deploy-docker-tag.yml"
      - "!.github/workflows/deploy-image.yml"
      - "!.github/workflows/docker-slim.yml"
      - "!.github/workflows/lighthouse-badger.yml"
      - "!.github/workflows/prettier.yml"
      - "!lighthouse_results/**"
      - "!CONTRIBUTING.md"
      - "!CUSTOMIZE.md"
      - "!FAQ.md"
      - "!INSTALL.md"
      - "!README.md"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      # 2. Fetch and copy al‑folio extras
      - name: Fetch al‑folio extras 📦
        run: |
          git clone --depth=1 https://github.com/alshedivat/al-folio.git vendor/al-folio
          mkdir -p assets/fonts assets/css
          cp vendor/al-folio/assets/fonts/academicons.* assets/fonts/
          cp vendor/al-folio/assets/css/academicons.min.css assets/css/

      # 3. Ensure fonts & CSS are included as a proper YAML array
      - name: Ensure Jekyll include: is an array ⚙️
        run: |
          if grep -q '^include:' _config.yml; then
            echo "Updating existing include section"
            sed -i '/^include:/a\  - assets/fonts\n  - assets/css' _config.yml
          else
            echo -e "\ninclude:\n  - assets/fonts\n  - assets/css" >> _config.yml
          fi

      # 4. Setup Ruby
      - name: Setup Ruby 💎
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3.6"
          bundler-cache: true

      # 5. Setup Python
      - name: Setup Python 🐍
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      # 6. Update giscus config
      - name: Update _config.yml (giscus) ⚙️
        uses: fjogeleit/yaml-update-action@main
        with:
          commitChange: false
          valueFile: "_config.yml"
          propertyPath: "giscus.repo"
          value: ${{ github.repository }}

      # 7. Build the site
      - name: Install and Build 🔧
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick
          pip3 install --upgrade nbconvert
          export JEKYLL_ENV=production
          bundle exec jekyll build

      # 8. Add .nojekyll so GitHub Pages doesn’t re‑process
      - name: Add .nojekyll 🚫
        run: touch _site/.nojekyll

      # 9. Purge unused CSS
      - name: Purge unused CSS 🧹
        run: |
          npm install -g purgecss
          purgecss -c purgecss.config.js

      # 10. Deploy to gh‑pages
      - name: Deploy 🚀
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: _site
          clean: true
          single-commit: true
